basePath: /api/v1
definitions:
  object.AddServerRequest:
    properties:
      created_time:
        description: ISO 8601 format
        type: string
      ipv4:
        description: IPv4 address of the server
        type: string
      last_updated_time:
        description: ISO 8601 format
        type: string
      server_id:
        type: string
      server_name:
        type: string
      status:
        description: e.g., "active", "inactive", "maintenance"
        type: string
      uptime:
        description: e.g., "3666" for 1 hour 1 minute and 6 seconds
        type: integer
    type: object
  object.AddServerResponse:
    properties:
      ipv4:
        description: IPv4 address of the server
        type: string
      message:
        description: Confirmation message
        example: Server added
        type: string
      server_id:
        description: Unique identifier for the server
        type: string
      server_name:
        description: Name of the server
        type: string
    type: object
  object.AuthRequest:
    properties:
      jwt:
        type: string
    required:
    - jwt
    type: object
  object.AuthResponse:
    properties:
      message:
        example: Authentication successfully
        type: string
    type: object
  object.DeleteServerResponse:
    properties:
      ipv4:
        description: IPv4 address of the deleted server
        type: string
      message:
        example: Server deleted successfully
        type: string
      server_id:
        description: Unique identifier for the deleted server
        type: string
      server_name:
        description: Name of the deleted server
        type: string
    type: object
  object.ImportCSVResponse:
    properties:
      message:
        example: File imported successfully
        type: string
    type: object
  object.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  object.LoginResponse:
    properties:
      message:
        example: Login successful
        type: string
    type: object
  object.RegisterRequest:
    properties:
      confirm_password:
        type: string
      email:
        type: string
      fullname:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - confirm_password
    - email
    - fullname
    - password
    - username
    type: object
  object.RegisterResponse:
    properties:
      message:
        example: Registration successful
        type: string
    type: object
  object.Server:
    properties:
      createdTime:
        description: ISO 8601 format
        type: string
      ipv4:
        type: string
      lastUpdatedTime:
        description: ISO 8601 format
        type: string
      serverId:
        type: string
      serverName:
        type: string
      status:
        description: e.g., "active", "inactive", "maintenance"
        type: string
      uptime:
        description: e.g., "3666" for 1 hour 1 minute and 6 seconds
        type: integer
    type: object
  object.UpdateServerRequest:
    properties:
      created_time:
        description: ISO 8601 format
        type: string
      ipv4:
        description: IPv4 address of the server
        type: string
      last_updated_time:
        description: ISO 8601 format
        type: string
      server_id:
        type: string
      server_name:
        type: string
      status:
        description: e.g., "active", "inactive", "maintenance"
        type: string
      uptime:
        description: e.g., "3666" for 1 hour 1 minute and 6 seconds
        type: integer
    type: object
  object.UpdateServerResponse:
    properties:
      ipv4:
        description: IPv4 address of the server
        type: string
      last_updated_time:
        description: Last updated time in ISO 8601 format
        type: string
      message:
        description: Confirmation message
        example: Server updated
        type: string
      server_id:
        description: Unique identifier for the server
        type: string
      server_name:
        description: Name of the server
        type: string
      status:
        description: Status of the server, e.g., "active", "inactive", "maintenance"
        type: string
    type: object
host: localhost:8800
info:
  contact:
    email: vudangducminh@gmail.com
    name: Vu Dang Duc Minh
    url: https://github.com/vudangducminh
  description: This is a sample server for VCS System Management API.
  title: VCS System Management API
  version: "1.0"
paths:
  /auth:
    post:
      consumes:
      - application/json
      description: Handle user authentication by validating JWT token and returning
        username
      parameters:
      - description: Authentication request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/object.AuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Authentication successfully
          schema:
            $ref: '#/definitions/object.AuthResponse'
      summary: Handle user authentication
      tags:
      - Auth
  /servers/add_server:
    post:
      consumes:
      - application/json
      description: Handle adding a new server by validating input and storing server
        information
      parameters:
      - description: Add server request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/object.AddServerRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Server added
          schema:
            $ref: '#/definitions/object.AddServerResponse'
      summary: Handle adding a new server
      tags:
      - Servers
  /servers/delete_server/{server_id}:
    delete:
      consumes:
      - application/json
      description: Delete a server by its unique ID
      parameters:
      - description: Server ID
        in: path
        name: server_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Server deleted successfully
          schema:
            $ref: '#/definitions/object.DeleteServerResponse'
      summary: Delete a server by ID
      tags:
      - Servers
  /servers/import_excel:
    post:
      consumes:
      - multipart/form-data
      description: Import server data from an Excel file
      parameters:
      - description: Excel file to import
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Excel file imported successfully
          schema:
            $ref: '#/definitions/object.ImportCSVResponse'
      summary: Import file from excel
      tags:
      - Servers
  /servers/update_server:
    put:
      consumes:
      - application/json
      description: Handle updating an existing server by validating input and updating
        server information
      parameters:
      - description: Update server request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/object.UpdateServerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Server updated
          schema:
            $ref: '#/definitions/object.UpdateServerResponse'
      summary: Handle updating an existing server
      tags:
      - Servers
  /servers/view_server/{server_name}:
    get:
      consumes:
      - application/json
      description: "View server details by server name substring\nExample usage:\t\t\t/servers/view_server/<server_name>"
      parameters:
      - description: Server name substring
        in: path
        name: server_name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of servers
          schema:
            items:
              $ref: '#/definitions/object.Server'
            type: array
      summary: View server details
      tags:
      - Servers
  /users/login:
    post:
      consumes:
      - application/json
      description: Handle user login by validating credentials and generating a JWT
        token
      parameters:
      - description: Login request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/object.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            $ref: '#/definitions/object.LoginResponse'
      summary: Handle user login
      tags:
      - Users
  /users/register:
    post:
      consumes:
      - application/json
      description: Handle user registration by validating input and storing account
        information
      parameters:
      - description: Registration request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/object.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Registration successful
          schema:
            $ref: '#/definitions/object.RegisterResponse'
      summary: Handle user registration
      tags:
      - Users
schemes:
- http
swagger: "2.0"
tags:
- description: '"Operations related to user authentication and management"'
  name: Users
- description: '"Operations related to user authentication"'
  name: Auth
- description: '"Operations related to server management"'
  name: Servers
