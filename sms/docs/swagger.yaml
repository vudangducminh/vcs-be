basePath: /api/v1
definitions:
  object.AuthRequest:
    properties:
      jwt:
        type: string
    required:
    - jwt
    type: object
  object.AuthResponse:
    properties:
      message:
        example: Authentication successfully
        type: string
    type: object
  object.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  object.LoginResponse:
    properties:
      message:
        example: Login successful
        type: string
    type: object
  object.RegisterRequest:
    properties:
      confirm_password:
        type: string
      email:
        type: string
      fullname:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - confirm_password
    - email
    - fullname
    - password
    - username
    type: object
  object.RegisterResponse:
    properties:
      message:
        example: Registration successful
        type: string
    type: object
host: localhost:8800
info:
  contact:
    email: vudangducminh@gmail.com
    name: Vu Dang Duc Minh
    url: https://github.com/vudangducminh
  description: This is a sample server for VCS System Management API.
  title: VCS System Management API
  version: "1.0"
paths:
  /auth:
    post:
      consumes:
      - application/json
      description: Handle user authentication by validating JWT token and returning
        username
      parameters:
      - description: Authentication request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/object.AuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Authentication successfully
          schema:
            $ref: '#/definitions/object.AuthResponse'
      summary: Handle user authentication
      tags:
      - Auth
  /users/login:
    post:
      consumes:
      - application/json
      description: Handle user login by validating credentials and generating a JWT
        token
      parameters:
      - description: Login request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/object.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            $ref: '#/definitions/object.LoginResponse'
      summary: Handle user login
      tags:
      - Users
  /users/register:
    post:
      consumes:
      - application/json
      description: Handle user registration by validating input and storing account
        information
      parameters:
      - description: Registration request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/object.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Registration successful
          schema:
            $ref: '#/definitions/object.RegisterResponse'
      summary: Handle user registration
      tags:
      - Users
schemes:
- http
swagger: "2.0"
tags:
- description: '"Operations related to user authentication and management"'
  name: Users
- description: '"Operations related to user authentication"'
  name: Auth
